name: SwiftWasm
on:
  push:
    branches: ["wasm32-wasi-release/6.2"]
  pull_request:
    branches: ["wasm32-wasi-release/6.2"]
env:
  WASMTIME_VESRION: 34.0.2
jobs:
  build:
    strategy:
      matrix:
        target:
          - triple: wasm32-unknown-wasi
            sdk:
              url: https://download.swift.org/swift-6.2-branch/wasm-sdk/swift-6.2-DEVELOPMENT-SNAPSHOT-2025-05-30-a/swift-6.2-DEVELOPMENT-SNAPSHOT-2025-05-30-a_wasm.artifactbundle.tar.gz
              checksum: c55777bd47790c9ee728380b4d4e145153f805432775511777ac89d07b559226
            artifact-name: swift-format.wasm
            other-wasmopt-flags:
    runs-on: ubuntu-24.04-arm
    container: swiftlang/swift:nightly-main-noble@sha256:67efd3f092b810d27ad21d90b9ab32fbbcead75df80dfcfa73bb773c80f104ca
    env:
      STACK_SIZE: 524288
    steps:
      - uses: actions/checkout@v4
      - name: Install tools
        run: apt-get update && apt-get install --no-install-recommends -y wabt binaryen unzip
      - run: swift --version
      - run: swift sdk install ${{ matrix.target.sdk.url }} --checksum ${{ matrix.target.sdk.checksum }}
      - name: Build
        run: |
          swift build --product swift-format --swift-sdk ${{ matrix.target.triple }} -c release -Xlinker -z -Xlinker stack-size=$STACK_SIZE
          wasm-strip .build/release/swift-format.wasm
          wasm-opt -Oz --enable-bulk-memory --enable-sign-ext ${{ matrix.target.other-wasmopt-flags }} .build/release/swift-format.wasm -o ${{ matrix.target.artifact-name }}
      - name: Upload ${{ matrix.target.artifact-name }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target.artifact-name }}
          path: ${{ matrix.target.artifact-name }}
  test-binary:
    needs: build
    strategy:
      matrix:
        target:
          - artifact-name: swift-format.wasm
            other-wasmtime-flags:
    runs-on: ubuntu-24.04-arm
    container: swiftlang/swift:nightly-main-noble@sha256:67efd3f092b810d27ad21d90b9ab32fbbcead75df80dfcfa73bb773c80f104ca
    steps:
      - uses: actions/checkout@v4
      - name: Install tools
        run: apt-get update && apt-get install --no-install-recommends -y xz-utils
      - uses: bytecodealliance/actions/wasmtime/setup@v1
        with:
          version: ${{ env.WASMTIME_VERSION }}
      - run: wasmtime -V
      - name: Download ${{ matrix.target.artifact-name }}
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.target.artifact-name }}
      - run: wasmtime --dir . ${{ matrix.target.other-wasmtime-flags }} ${{ matrix.target.artifact-name }} --version
      - run: wasmtime --dir . ${{ matrix.target.other-wasmtime-flags }} ${{ matrix.target.artifact-name }} lint -r .
  test:
    strategy:
      matrix:
        target:
          - triple: wasm32-unknown-wasi
            sdk:
              url: https://download.swift.org/swift-6.2-branch/wasm-sdk/swift-6.2-DEVELOPMENT-SNAPSHOT-2025-05-30-a/swift-6.2-DEVELOPMENT-SNAPSHOT-2025-05-30-a_wasm.artifactbundle.tar.gz
              checksum: c55777bd47790c9ee728380b4d4e145153f805432775511777ac89d07b559226
            other-wasmtime-flags:
    runs-on: ubuntu-24.04-arm
    container: swiftlang/swift:nightly-main-noble@sha256:67efd3f092b810d27ad21d90b9ab32fbbcead75df80dfcfa73bb773c80f104ca
    env:
      STACK_SIZE: 4194304
    steps:
      - uses: actions/checkout@v4
      - name: Install tools
        run: apt-get update && apt-get install --no-install-recommends -y xz-utils unzip
      - uses: bytecodealliance/actions/wasmtime/setup@v1
        with:
          version: ${{ env.WASMTIME_VERSION }}
      - run: swift --version
      - run: wasmtime -V
      - run: swift sdk install ${{ matrix.target.sdk.url }} --checksum ${{ matrix.target.sdk.checksum }}
      - run: swift build -c release --build-tests --swift-sdk ${{ matrix.target.triple }} -Xlinker -z -Xlinker stack-size=$STACK_SIZE
      - run: wasmtime --dir / --wasm max-wasm-stack=$STACK_SIZE ${{ matrix.target.other-wasmtime-flags }} .build/release/swift-formatPackageTests.xctest
